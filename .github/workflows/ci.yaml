name: ci

on:
  push:
jobs:
  release:
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: info
        id: info
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "##[set-output name=node_version;]$(cat .nvmrc)"
          echo "##[set-output name=yarn_cache;]$(yarn cache dir)"
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}" >> ~/.npmrc

      - id: use_node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ steps.info.outputs.node_version }}

      - name: yarn_cache
        id: yarn_cache
        uses: actions/cache@v1
        with:
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          path: ${{ steps.info.outputs.yarn_cache }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: node_modules_cache
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-node_modules_cache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-node_modules_cache-

      - name: install
        id: install
        run: |
          yarn install --frozen-lockfile

      - id: test
        name: test
        run: |
          yarn test

      - id: build
        name: build
        run: |
          yarn build

      - id: release
        name: release
        run: |
          git config user.name "GitHub Actions Build"
          git config user.email "developers@mobilehead.com"
          git checkout ${{ steps.info.outputs.branch }}
          git remote set-url origin "https://MobileheadBot:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY.git"
          [[ -z "$(git status --porcelain)" ]]
          if [[ "${{ steps.info.outputs.branch }}" != "master" ]]
          then
            yarn release  --message "chore(release): Release v%s :tada: [ci skip]" --prerelease ${{ github.sha }}
            git push --follow-tags origin ${{ steps.info.outputs.branch }}
          else
            yarn release --message "chore(release): Release v%s :tada: [ci skip]"
            git push --follow-tags origin master && yarn publish
          fi
